# 不是每一次push都会触发部署，当提交以v开头的标签就会触发自动部署, 如v1.0 v1.1
name: Publish And Deploy Demo
on: 
  push:
    tags:
      - 'v*'

# 执行的工作：构建和部署
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

    # 下载源码
    - name: Checkout
      uses: actions/checkout@master

    # 打包构建
    - name: Build
      uses: actions/setup-node@master
    - run: npm install
    - run: npm run build
    - run: tar -czvf release.tgz .nuxt static nuxt.config.js package.json package-lock.json pm2.config.json

    # 发布 Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.REALWORLD }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    # 上传构建结果到 Release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.REALWORLD }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release.tgz
        asset_name: release.tgz
        asset_content_type: application/x-tgz


    # 部署到服务器(scripT下的命令是运行在远程服务器的)
    # 需要准备的是（HOST USERNAME PASSWORD PORT）
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script:
          cd /root/realworld-nuxtjs
          wget https://github.com/xiaoqiang007-github/realworld/releses/latest/download/release.tgz -0 release.tgz
          tar zxvf release.tgz
          npm install --production
          pm2 reload pm2.config.json


